generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  binaryTargets        = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lessee {
  id        String   @id @default(cuid())
  name      String   
  month     String
  fileName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assets Asset[] 
  
  @@unique([name, month])
  @@map("lessees")
}

model Asset {
  id                 String     @id @default(cuid())
  name               String
  serialNumber       String
  registrationNumber String
  validation_status  String
  report_status      String
  obligation_status  String
  month              String
  createdAt          DateTime   @default(now())

  lesseeId String
  lessee   Lessee    @relation(fields: [lesseeId], references: [id], onDelete: Cascade)

  components Component[]

  @@map("assets")
}

model Component {
  id                  String   @id @default(cuid())
  type                String
  serialNumber        String
  lastUtilizationDate String
  flightHours         String
  flightCycles        String
  apuHours            String
  apuCycles           String
  tsnAtPeriod         String
  csnAtPeriod         String
  tsnAtPeriodEnd      String
  csnAtPeriodEnd      String
  lastTsnCsnUpdate    String
  lastTsnUtilization  String
  lastCsnUtilization  String
  attachmentStatus    String
  engineThrust        String
  status              String
  utilReportStatus    String
  asset_status        String
  derate              String
  month               String
  createdAt           DateTime @default(now())

  assetId String
  asset   Asset    @relation(fields: [assetId], references: [id], onDelete: Cascade)

  @@map("components")
}
